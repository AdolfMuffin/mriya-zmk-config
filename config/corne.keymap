/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <220>;
};

&mt {
    quick_tap_ms = <220>;
};

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };
        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
          cprght: cprght {
            label = "ZM_cprght";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };
        degree: degree {
            label = "ZM_degree";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };
        plsmns: plsmns {
            label = "ZM_plsmns";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------------------------------
            //| ESC   	|   Q  	|LGUI/W |   E  	|   R 	|   T  	|   	|   Y  	|   U   |   I  	|   O  	|   P  	| [	   | 
            //| CTRL/] 	|   A  	|   S  	|   D  	|   F  	|   G  	|   	|   H  	|   J   |   K  	|   L  	|   ;  	| CTRL/'   |
            //| LALT/\ 	|   Z  	|   X  	|   C  	|   V  	|   B  	|   	|   N  	|   M   |   ,  	|   .  	|   /  	| RALT/-   |
            //                    	|  RSE 	|  SPC 	|  LWR 	|   	|  LWR 	|  BKSP |  RSE 	|

            bindings = <
	&kp ESC    	&kp Q   &mt LWIN W  &kp E   &kp R       &kp T            &kp Y       &kp U       &kp I           &kp O      &kp P      &kp LBKT
	&mt LCTRL RBKT  &kp A   &kp S       &kp D   &kp F       &kp G            &kp H       &kp J       &kp K           &kp L      &kp SEMI   &mt RCTRL SQT
	&mt LALT BSLH  	&kp Z   &kp X       &kp C   &kp V       &kp B            &kp N       &kp M       &kp COMMA       &kp DOT    &kp FSLH   &mt RALT MINUS
						    &lt 2 TAB   &mt LSHFT SPACE  &lt 1 RET   &lt 1 RET   &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------------------------------
            //| CAPS 	|  F1 	|  F2 	|  F3 	|  F4 	|   ~  	|    	|   !  	|   @  	|   #  	|   $  	|   %  	| RGUI     |
            //| CTRL 	|  F5 	|  F6 	|  F7 	|  F8 	| MENU	|    	|   ^  	|   &  	|   *  	|   (  	|   )  	| CTRL 	   |
            //| LALT 	|  F9 	|  F10	|  F11	|  F12	| LANG	|    	|   _ 	|   | 	|   : 	|   { 	|   } 	| RALT 	   |
            //                      	|  ADJ 	| _____	| _____	|    	| _____	| RSHFT	|  ADJ 	|

            bindings = <
    &kp CAPS   	&kp F1   &kp F2     &kp F3  	&kp F4      &kp GRAVE      	&kp EXCL    &kp AT     	&kp HASH    &kp DOLLAR    &kp PERCENT   &kp RGUI
    &kp LCTRL   &kp F5   &kp F6     &kp F7      &kp F8      &kp K_CMENU     	&kp CARET   &kp AMPS  	&kp STAR    &kp LPAR      &kp RPAR      &kp RCTRL
    &kp LALT    &kp F9   &kp F10    &kp F11     &kp F12     &kp LG(SPACE)  	&kp UNDER   &kp PIPE2   &kp COLON   &kp LBRC      &kp RBRC      &kp RALT
				    &lt 3 TAB   &kp LSHFT   &trans         	&trans      &kp RSHFT   &lt 3 DEL
            >;
        };

        raise_layer {
            // -------------------------------------------------------------------------------------------------------------------
            //| BKSP 	|   *	|   9	|   8 	|   7 	|   +  	|       | NEXT	| HOME 	| PSCRN	| PGUP 	| VOLU 	| RGUI	   |
            //| , 	|   / 	|   3 	|   2  	|   1 	|   - 	|       | PLAY	| LEFT 	| UP  	| RGHT 	| VOLD 	| CTRL 	   | 
            //| = 	|   . 	|   6 	|   5 	|   4  	|   0  	|       | PREV	| END  	| DOWN 	| PGDN 	| MUTE 	| RALT 	   |
            //                          | _____	| NUMLK |  ADJ 	|       | ADJ  	| RSHFT	| _____	|

            bindings = <
    &kp BSPC  	   &kp KP_MULTIPLY  &kp KP_N9  &kp KP_N8   &kp KP_N7    &kp PLUS       &kp C_NEXT  &kp HOME    &kp PSCRN   &kp PG_UP   &kp C_VOL_UP    &kp RIGHT_GUI
    &kp KP_COMMA   &kp KP_SLASH     &kp KP_N3  &kp KP_N2   &kp KP_N1    &kp MINUS      &kp C_PLAY  &kp LEFT    &kp UP  	   &kp RIGHT   &kp C_VOL_DN    &kp RCTRL 
    &kp EQUAL  	   &numdot 	    &kp KP_N6  &kp KP_N5   &kp KP_N4    &kp KP_N0      &kp C_PREV  &kp END     &kp DOWN    &kp PG_DN   &kp C_MUTE      &kp RALT
					       &trans  	   &kp KP_NUM   &lt 3 RET      &lt 3 RET   &kp RSHFT   &trans
            >;
        };

        adjust_layer {
            // -------------------------------------------------------------------------------------------------------------------
            //| BLDR 	| _____	| _____	| _____	| _____	| _____	|   	|  UNDO	|  REDO	| _____	| _____	|  BRUP	| SLEEP	   |
            //| BTCLR	|  BT0 	|  BT1 	|  BT2 	|  BT3 	|  BT4 	|   	|  BT4 	|  BT3 	|  BT2 	|  BT1 	|  BT0 	| BTCLR	   |
            //| pwrOFF	| NUMLK	|  CAPS |  SLCK	|  INS	| PAUSE	|   	|   ©  	|   ±	|   °  	| _____	|  BRDN	| pwrOFF   |
            //                       	| _____	| _____	| _____	|     	| _____	| _____	| _____	|

            bindings = <
    &bootloader         &none         	&none       	&none         	&none         	&none         	 &kp C_UNDO      &kp C_REDO      &none         	&none         	&kp C_BRI_UP    &kp C_SLEEP
    &bt BT_CLR  	&bt BT_SEL 0 	&bt BT_SEL 1  	&bt BT_SEL 2  	&bt BT_SEL 3  	&bt BT_SEL 4  	 &bt BT_SEL 4  	 &bt BT_SEL 3  	 &bt BT_SEL 2  	&bt BT_SEL 1  	&bt BT_SEL 0    &bt BT_CLR
    &ext_power EP_OFF   &kp KP_NUM      &kp CAPS        &kp SLCK        &kp INS        	&kp PAUSE_BREAK  &cprght         &plsmns         &degree        &none         	&kp C_BRI_DN  	&ext_power EP_OFF
							&trans         	&none        	&trans        	 &trans          &none        	 &trans
            >;
        };
    };
};
